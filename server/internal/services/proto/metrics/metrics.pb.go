// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: metrics.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemoryUsage struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Timestamp             int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TotalMemory           int64                  `protobuf:"varint,2,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	FreeMemory            int64                  `protobuf:"varint,3,opt,name=freeMemory,proto3" json:"freeMemory,omitempty"`
	UsedMemory            int64                  `protobuf:"varint,4,opt,name=usedMemory,proto3" json:"usedMemory,omitempty"`
	MemoryUsagePercentage float64                `protobuf:"fixed64,5,opt,name=memoryUsagePercentage,proto3" json:"memoryUsagePercentage,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUsage.ProtoReflect.Descriptor instead.
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *MemoryUsage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MemoryUsage) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *MemoryUsage) GetFreeMemory() int64 {
	if x != nil {
		return x.FreeMemory
	}
	return 0
}

func (x *MemoryUsage) GetUsedMemory() int64 {
	if x != nil {
		return x.UsedMemory
	}
	return 0
}

func (x *MemoryUsage) GetMemoryUsagePercentage() float64 {
	if x != nil {
		return x.MemoryUsagePercentage
	}
	return 0
}

type CoreUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Core          int32                  `protobuf:"varint,1,opt,name=core,proto3" json:"core,omitempty"`
	Usage         float64                `protobuf:"fixed64,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoreUsage) Reset() {
	*x = CoreUsage{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoreUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreUsage) ProtoMessage() {}

func (x *CoreUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreUsage.ProtoReflect.Descriptor instead.
func (*CoreUsage) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *CoreUsage) GetCore() int32 {
	if x != nil {
		return x.Core
	}
	return 0
}

func (x *CoreUsage) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type CpuUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Average       float64                `protobuf:"fixed64,2,opt,name=average,proto3" json:"average,omitempty"`
	Cores         []*CoreUsage           `protobuf:"bytes,3,rep,name=cores,proto3" json:"cores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpuUsage) Reset() {
	*x = CpuUsage{}
	mi := &file_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsage) ProtoMessage() {}

func (x *CpuUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuUsage.ProtoReflect.Descriptor instead.
func (*CpuUsage) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *CpuUsage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CpuUsage) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *CpuUsage) GetCores() []*CoreUsage {
	if x != nil {
		return x.Cores
	}
	return nil
}

type Metrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryUsage   *MemoryUsage           `protobuf:"bytes,1,opt,name=memoryUsage,proto3" json:"memoryUsage,omitempty"`
	CpuUsage      *CpuUsage              `protobuf:"bytes,2,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	ServiceName   string                 `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *Metrics) GetMemoryUsage() *MemoryUsage {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *Metrics) GetCpuUsage() *CpuUsage {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *Metrics) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           bool                   `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *Res) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

var File_metrics_proto protoreflect.FileDescriptor

const file_metrics_proto_rawDesc = "" +
	"\n" +
	"\rmetrics.proto\x12\x06logboy\"\xc3\x01\n" +
	"\vMemoryUsage\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12 \n" +
	"\vtotalMemory\x18\x02 \x01(\x03R\vtotalMemory\x12\x1e\n" +
	"\n" +
	"freeMemory\x18\x03 \x01(\x03R\n" +
	"freeMemory\x12\x1e\n" +
	"\n" +
	"usedMemory\x18\x04 \x01(\x03R\n" +
	"usedMemory\x124\n" +
	"\x15memoryUsagePercentage\x18\x05 \x01(\x01R\x15memoryUsagePercentage\"5\n" +
	"\tCoreUsage\x12\x12\n" +
	"\x04core\x18\x01 \x01(\x05R\x04core\x12\x14\n" +
	"\x05usage\x18\x02 \x01(\x01R\x05usage\"k\n" +
	"\bCpuUsage\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\aaverage\x18\x02 \x01(\x01R\aaverage\x12'\n" +
	"\x05cores\x18\x03 \x03(\v2\x11.logboy.CoreUsageR\x05cores\"\x90\x01\n" +
	"\aMetrics\x125\n" +
	"\vmemoryUsage\x18\x01 \x01(\v2\x13.logboy.MemoryUsageR\vmemoryUsage\x12,\n" +
	"\bcpuUsage\x18\x02 \x01(\v2\x10.logboy.CpuUsageR\bcpuUsage\x12 \n" +
	"\vserviceName\x18\x03 \x01(\tR\vserviceName\"\x17\n" +
	"\x03Res\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\bR\x03ackB(Z&server/internal/services/proto/metricsb\x06proto3"

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData []byte
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)))
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_metrics_proto_goTypes = []any{
	(*MemoryUsage)(nil), // 0: logboy.MemoryUsage
	(*CoreUsage)(nil),   // 1: logboy.CoreUsage
	(*CpuUsage)(nil),    // 2: logboy.CpuUsage
	(*Metrics)(nil),     // 3: logboy.Metrics
	(*Res)(nil),         // 4: logboy.Res
}
var file_metrics_proto_depIdxs = []int32{
	1, // 0: logboy.CpuUsage.cores:type_name -> logboy.CoreUsage
	0, // 1: logboy.Metrics.memoryUsage:type_name -> logboy.MemoryUsage
	2, // 2: logboy.Metrics.cpuUsage:type_name -> logboy.CpuUsage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
